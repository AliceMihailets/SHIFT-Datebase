--1. проверка скидки на товар (возвращает число = размеру скидки)
create or replace function GetSale (
current_date date, my_id_shop stores.id_store%type, my_id_prod products.id_product%type) return sales.size_of_sales%type is
i sales.size_of_sales%type; 
begin
  
  begin 
    select nvl(s.size_of_sales,0) into i
    from sales s
    join typesofsales tos on s.type_of_sale = tos.id_type_of_sale
    --передали айди магазина и текущую дату
    where s.id_shop = my_id_shop 
    and s.start_date_of_sale <= current_date
    and s.end_date_of_sale >= current_date
    and tos.id_category = (select c.id_category
                           from categories c
                           join products p on c.id_category = p.id_category
                           where p.id_product = my_id_prod)
    and tos.id_product is null;
    exception 
    when no_data_found then 
      dbms_output.put_line('category not found');
      i := 0;
  end;
  
  if (i = 0) then
  
   begin 
    select nvl(s.size_of_sales,0) into i
    from sales s
    join typesofsales tos on s.type_of_sale = tos.id_type_of_sale
    --передали айди магазина и текущую дату
    where s.id_shop = my_id_shop 
    and s.start_date_of_sale <= current_date
    and s.end_date_of_sale >= current_date
    and tos.id_category is null
    and tos.id_product = my_id_prod;
    exception 
    when no_data_found then 
      dbms_output.put_line('product not found');
      i := 0;
  end;
  
  end if;
  
  return i;
  
end GetSale;

/

declare 
k sales.size_of_sales%type;
begin
  k := GetSale(TO_DATE('16072021','DDMMYYYY'), 1, 1);
  dbms_output.put_line(k);
end;

/
